#This is the user configuration file for /config/scripts/getBlacklistHosts.sh V8.3


#location of the whitelist. This file contains one host/domain per line that will
#be excluded from the blacklist. If the file does not exist it wll not be used.

readonly whitelist="/config/scripts/dnswhitelist"

#Examples below show the whitelist results on these blacklist entries:
#somedomain.com
#api.somedomain.com
#cdn.somedomain.com
#events.somedomain.com

#no dnswhitelist entry:
#entire somedomain.com is blocked due to 'somedomain.com' being included in the blacklist data

#dnswhitelist entry: *somedomain.com (note no dot between * and domain name)
#resulting blacklist entries:
#none - entire domain whitelisted

#dnswhitelist entry: somedomain.com
#resulting blacklist entries:
#address=/api.somedomain.com/0.0.0.0
#address=/cdn.somedomain.com/0.0.0.0
#address=/events.somedomain.com/0.0.0.0

#dnswhitelist entry: api.somedomain.com - this one subdomain will be whitelisted
#resulting blacklist entries:
#address=/somedomain.com/0.0.0.0
#address=/cdn.somedomain.com/0.0.0.0
#address=/events.somedomain.com/0.0.0.0




#location of the user-defined blacklist. This file contains one host/domain per line that will
#be included in the final blacklist. If the file does not exist it will not be used.
#If a domain is listed the entire domain and all subdomains will be blocked.
#If a subdomain or specific host is listed, only that will be blocked.
#This does not use the * to denote a domain as the whitelist does.
readonly userblacklist="/config/scripts/dnsblacklist"




#user-defined source URLs
#you can add your own source URLs here from which the script will download
#additional blacklist entries. You can have as may as you like.
#If no URLs are defined it will be skipped during processing.

#user-defined source URL format is:
#URLarray[uniqueLabel]="sourceUrl"
#where uniqueLabel is a unique (per URL) character string with no spaces or extended characters and
#sourceUrl is the URL to pull from.

#example:
#URLarray[site1]="http://TestMyLocalUSGDns.com/badhosts"
#URLarray[site2]="https://TestMyLocalUSGDns2.com/morebadhosts"




#script-provided source URLs
#These are the source URLs that come with this script.
#The first entries are the pi-hole sources listed at
#https://github.com/pi-hole/pi-hole/blob/master/adlists.default
#If you want to run exactly the same sources as pi-hole, comment out
#the other sources in this section.
#If you do not want to use any of these sources you may comment them all out.
#As a note, please do not remove or add lines from this section.
#To remove sources simply comment out the line with a leading #.
#To add sources please add them to the user-defined section above.
#This is to ensure that if future updates contain more sources they can be added
#via the script during the update process and not confict with any user made changes.

#Pi-hole source 1: StevenBlack list
ProvidedURLarray[pi1]="https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"

#Pi-hole source 2: MalwareDomains
ProvidedURLarray[pi2]="https://mirror1.malwaredomains.com/files/justdomains"

#Pi-hole source 3: Cameleon
ProvidedURLarray[pi3]="http://sysctl.org/cameleon/hosts"

#Pi-hole source 4: Zeustracker
ProvidedURLarray[pi4]="https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist"

#Pi-hole source 5: Disconnect.me Tracking
ProvidedURLarray[pi5]="https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt"

#Pi-hole source 6: Disconnect.me Ads
ProvidedURLarray[pi6]="https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt"

#Pi-hole source 7: Hosts-file.net
ProvidedURLarray[pi7]="https://hosts-file.net/ad_servers.txt"

#Other source 1
#ProvidedURLarray[O1]="http://winhelp2002.mvps.org/hosts.txt"

#Other source 2
#ProvidedURLarray[O2]="https://adaway.org/hosts.txt"

#Other source 3
#ProvidedURLarray[O3]="https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext"

#Other source 4
#ProvidedURLarray[O4]="https://someonewhocares.org/hosts/hosts/"




#Shalla sources:
#Sources from the blacklist to use. See http://www.shallalist.de/categories.html for categories.
#You can add or comment out categories from this area.
#If no categories are defined it will be skipped during processing.

#Shalla list category format is:
#ShallaArray[uniqueLabel]="ShallaCategory"
#where uniqueLabel is a unique (per category) character string with no spaces or extended characters and
#ShallaCategory is an exact Shalla category from http://www.shallalist.de/categories.html.

#Shalla advertising:
#ShallaArray[Shalla1]="adv"

#Shalla spyware:
#ShallaArray[Shalla2]="spyware"

#Shalla tracker:
#ShallaArray[Shalla3]="tracker"




#What is the time limit (in seconds) for each file download?
#This is to set a limit for curl when downloading from each source.
#Without a limit curl would wait forever for a file to finish.
#This sets the --max-time parameter for curl.
#If you have a slower connection, you may need to increase the default 60 seconds.
curlMaxTime="60"




#What IP address do you want the blocked hosts to resolve to?
#0.0.0.0 is the default setting.
#This has to be a valid IP address, not URL or hostname.
#For more information on why the default is not 127.0.0.1, see here:
#https://github.com/StevenBlack/hosts#we-recommend-using-0000-instead-of-127001
resolveAddress="0.0.0.0"




#Where do you want to put the dnsmasq config files this script makes?
#/etc/dnsmasq.d is the default setting.
#This would only need to be changed if you are configuring this script to update
#a secondary instance of dnsmasq.
#Do not put a trailing slash here.
dnsmasqHome="/etc/dnsmasq.d"




#What is the name of the dnsmasq instance in /etc/init.d/ that we are going to restart?
#dnsmasq is the default setting.
#This would only need to be changed if you are configuring this script to update
#a secondary instance of dnsmasq and you have the init.d file named something else.
#We are going to call "/etc/init.d/<this filename here> force-reload" using this name.
dnsmasqName="dnsmasq"




#Are there any options that you want to pass to dnsmasq?
#Dnsmasq options can be found at http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq-man.html.
#Any options put here will be provided to dnsmasq in a .conf file located in the home folder specified above.
#The options will be read by dnsmasq when this script restarts it after processing.
#This is a ; delmited list, not not include the leading -- just the options themselves.
#If you do not want to specify any options, keep this empty.
#If you do want to specify any options, place them between the " marks.
#An example is: "log-queries;some-other-option"
#The above example would enable dnsmasq logging of each query, and also some-other-option as well.
dnsmasqOptions=""




#debugging
#do you want to save a copy of these files for debugging:
#nonFilteredHosts - contains raw dump of all the downloaded and user-defined hosts
#singleDomains - list of all single domains from which all sub-domains will be removed in the final list
#filteredHosts - contains the cleaned list before whitelist processing
#finalHosts - final file after whitelist procesing that dnsmasq entries are created from
#these files will be saved in /config/scripts by default.
#true/false
enableDebugging=false

#change the default debugging output directory by changing the next line
#this directory must exist. Do not put a trailing slash
debugDirectory=/config/scripts




#do you want to stop the script before dnsmasq files are created?
#false (default setting) - script runs and configures dnsmasq
#true - script will process downloads then stop. It will not create dnsmasq configuration.
#This will let you test your file downloads and generate (if you configure them) debug files.
stopBeforeConfig=false




#filename that will be run after the script finishes. If it does not exist it will not be run.
postRun="/config/scripts/getBlacklistPostRun.sh"




#do you want to receive an email when script is run? true/false
#note this host must be setup to send mail via /usr/bin/ssmtp
#see revaliases and ssmtp.conf in /etc/ssmtp
sendEmails=false

#email address (user@domain.com) to send mail to
emailtoaddr="youremail@somedomain.com"

#mail from name to use 
emailfromname="USG Main Router"

#email address (user@domain.com) to send mail from
#note this address must be setup to send mail via /usr/bin/ssmtp
#see revaliases and ssmtp.conf in /etc/ssmtp
emailfromaddr="youremail@somedomain.com"

#email subject to use
emailsubject="USG hostblacklist updated"




#do you want to create a comma delimited history count when script is run? true/false
recordHistory=false

#full path and filename to file which holds the comma delmited hosts count history
#this is ignored if recordHistory is set to false above
historycountFile="/config/scripts/BlacklistHistoryCount.txt"




################################
#data from reoccuring runs is below, do not edit

current_count="70558"
old_count="70552"
current_shallaMD5="none"
